#!/usr/bin/env bash

source bw-platform

install_dependencies () {
  if ! command -v docker
  then
    bw-install-docker
  fi
  if ! command -v dotnet
  then
    bw-install-dotnet
  fi
  if ! command -v pwsh
  then
    bw-install-pwsh
  fi

  if [[ -z "${BW_SESSION}" ]]; then
    login_to_bw
  fi
}

clone_repo () {
  cd $HOME
  mkdir bitwarden
  cd bitwarden
  git clone git@github.com:bitwarden/server.git
  cd server 
}

configure_git () {
  git config blame.ignoreRevsFile .git-blame-ignore-revs

  # NOTE: This is optional in the contributing guide, and maybe should be an option here as well.
  # Setting up a pre-commit hook to run dotnet format
  git config --local core.hooksPath .git-hooks
}

setup_env () {
  cd dev

  # Cloning a .env file from the template
  cp .env.example .env

  # Generating a database password
  DBPASSWORD=$(generate_passphrase)
  sed -i "s/SET_A_PASSWORD_HERE_123/$DBPASSWORD/g" .env

  # Installing the Azurite tools
  pwsh -Command "Install-Module -Name Az -Scope CurrentUser -Repository PSGallery -Force"

  # Running docker compose
  docker compose --profile cloud --profile mail up -d

  pwsh setup_azurite.ps1

  # Running migrations scripts
  pwsh migrate.ps1

  # Creating Identity and Data Protection licenses
  ./create_certificates_linux.sh > fingerprints.txt

  bw get attachment dev.cer --itemid 7123e5d3-f837-4a8c-810a-a7ca00fe1fdd --session $BW_SESSION
  bw get attachment dev.pfx --itemid 7123e5d3-f837-4a8c-810a-a7ca00fe1fdd --session $BW_SESSION
  sudo openssl x509 -inform DER -in dev.cer -out dev.crt
  sudo chmod 644 dev.crt

  if [[ "$PLATFORM" == "ubuntu" ]]; then
    sudo mv dev.crt /usr/local/share/ca-certificates/
    sudo chmod 644 /usr/local/share/ca-certificates/dev.crt
    sudo mv data_protection_dev.crt /usr/local/share/ca-certificates/
    sudo mv identity_server_dev.crt /usr/local/share/ca-certificates/
    update-ca-certificates
    pwsh -Command "using namespace System.Security.Cryptography.X509Certificates; \$store = [X509Store]::new('My', 'CurrentUser', 'ReadWrite'); \$store.Add([X509Certificate2]::new('/home/me/environment-setup/dev.pfx', '$LICENSINGCERTPW', [X509KeyStorageFlags]::PersistKeySet)); \$store.Dispose()"

  fi
  if [[ "$PLATFORM" == "arch" ]]; then
    sudo mv dev.crt /etc/ca-certificates/trust-source/anchors
    sudo mv data_protection_dev.crt /etc/ca-certificates/trust-source/anchors
    sudo mv identity_server_dev.crt /etc/ca-certificates/trust-source/anchors
    sudo update-ca-trust
  fi

  # Adding the pfx license to dotnet's source folder
  pwsh -Command "using namespace System.Security.Cryptography.X509Certificates; \$store = [X509Store]::new('My', 'CurrentUser', 'ReadWrite'); \$store.Add([X509Certificate2]::new('/home/me/environment-setup/dev.pfx', '$LICENSEPW', [X509KeyStorageFlags]::PersistKeySet)); \$store.Dispose()"

  # Configuring project secrets
  IDENTITYFINGERPRINT=$(awk '/Identity Server Dev/ { print $4}' fingerprints.txt)
  DATAPROTECTIONFINGERPRINT=$(awk '/Data Protection Dev/ { print $4}' fingerprints.txt)
  rm fingerprints.txt

  bw get attachment secrets-for-env-setup.json --itemid d4195f67-dd43-4465-84d7-ae320013e6ff --session $BW_SESSION
  mv secrets-for-env-setup.json secrets.json
  bw get attachment additional-keys-for-cloud-services.json --itemid d4195f67-dd43-4465-84d7-ae320013e6ff --session $BW_SESSION

  sed -i "s/DB_PASSWORD/$DBPASSWORD/g" secrets.json
  sed -i "s/DATAPROTECTION_THUMBPRINT/$DATAPROTECTIONFINGERPRINT/g" secrets.json
  sed -i "s/IDENTITY_THUMBPRINT/$IDENTITYFINGERPRINT/g" secrets.json

  INSTALLATIONID=$(parse_config_item_custom_field "installation-id")
  INSTALLATIONKEY=$(parse_config_item_custom_field "installation-key")
  sed -i "s/INSTALLATION_ID/$INSTALLATIONID/g" secrets.json
  sed -i "s/INSTALLATION_KEY/$INSTALLATIONKEY/g" secrets.json

  pwsh setup_secrets.ps1
}

bw_build_server () {
  install_dependencies
  clone_repo
  configure_git
  setup_env
}

bw_build_server
